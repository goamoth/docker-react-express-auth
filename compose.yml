# version: 3 - obsolete and only informative
name: docker-react-express-auth

services:
   frontend:
      build: ./frontend
      container_name: frontend
      depends_on:
         - backend
      ports:
         - 5173:5173
      volumes:
         - /app/node_modules
      networks:
         client:
      develop:
         watch:
            -  action: sync
               path: ./frontend/src
               target: /app/src
            -  action: rebuild
               path: ./frontend/package.json
               target: /app

   backend:
      build: ./backend
      container_name: backend
      # depends_on:
      #    - redis
      ports:
         - 8000:8000
      volumes:
         - /app/node_modules
      networks:
         client:
      develop:
         watch:
            -  action: sync+restart
               path: ./backend
               target: /app
            -  action: rebuild
               path: ./backend/package.json

   postgres:
      image: postgres:17.0-alpine3.20
      container_name: postgres
      restart: unless-stopped
      ports:
         - 5432:5432
      volumes:
         -  postgres_data:/var/lib/postgresql/data
      networks:
         server:
      environment:
         POSTGRES_HOST_AUTH_METHOD: trust
         POSTGRES_USER: ${POSTGRES_USER}
         POSTGRES_PASSWORD: /run/secrets/db_password
         POSTGRES_DB: ${POSTGRES_DB}
      secrets:
         -  db_password

   pgadmin:
      image: dpage/pgadmin4
      container_name: pgadmin
      depends_on:
         - postgres
      restart: unless-stopped
      networks:
         server:
      ports:
         - 5050:80
      environment:
         PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
         PGADMIN_DEFAULT_PASSWORD_FILE: /run/secrets/pgadmin_password
      secrets:
         -  pgadmin_password


   # redis:
   #    image: redis:alpine
   #    restart: always
   #    volumes:
   #       - redis_volume_data:/data
   #    ports:
   #       - 6379:6379
   #    networks:
   #       - server

   # redis_insight:
   #    image: redis/redisinsight:latest
   #    restart: always
   #    depends_on:
   #       - redis
   #    volumes:
   #       - redis_insight_volume_data:/db
   #    ports:
   #       - 8001:8001
   #    networks:
   #       - server

volumes:
   postgres_data:
   #   driver: local
   # redis_volume_data:
   # redis_insight_volume_data:

networks:
   client:
   server:

secrets:
   db_password:
      file: ./secrets/db_password.txt
   pgadmin_password:
      file: ./secrets/pgadmin_password.txt

# docker run -p 3000:3000 -v $(pwd):/app:ro -v /app/node_modules --name node_app_container node_app_image
# docker exec -it postgres psql -U admin -W docker-mern